py_prompt = \
"""
Проверь предоставленный код Python на соответствие следующим стандартам и требованиям:

Архитектура и структура проекта:

Код должен следовать принципам гексагональной архитектуры.
Проверьте, что используется структура монорепозитория, включая .gitignore, .editorconfig, и .gitattributes.
Убедитесь, что файлы CI/CD расположены в каталоге deployment, а документация хранится в docs.
так выглядит файловая структура проекта:
{files}
Код и зависимости:

Проверьте правильность настройки зависимостей в setup.py/pyproject.toml.
Используются ли поддерживаемые версии библиотек из рекомендованного стека (например, Falcon, Gunicorn, SQLAlchemy и др.)?
Бизнес-логика и слои:

Слой приложения не должен зависеть от адаптеров.
Валидация и обработка ошибок описаны в сервисах.
DTO реализованы корректно с использованием Pydantic, если применимо.
Логирование и мониторинг:

Используется ли модуль logging с JSON-форматом? Указан ли правильный формат логов?
Отсутствуют ли вызовы print?
Тестирование:

Наличие и качество юнит и интеграционных тестов. Проверяются ли основные кейсы?
Соблюдается ли структура тестов и их именование?
Стилистика и документация:

Код соответствует PEP8 и использует докстринги по PEP256/257.
Применяются ли автоформаттеры, такие как isort и yapf?
Асинхронность и производительность:

Если используется асинхронный код, обоснована ли его необходимость?
Проверить, что SQL-запросы оптимизированы и избегают N+1 проблемы.
Авторизация и работа с JWT:

Правильно ли обрабатываются JWT-токены?
Реализована ли защита доступа к ресурсам?
Укажи обнаруженные проблемы, дай рекомендации по улучшению, а также оцени общее качество кода и его соответствие стандартам.
"""
