react_prompt = \
"""
Проверь предоставленный код React на соответствие следующим стандартам и рекомендациям:

Архитектура и структура проекта:

Соответствует ли структура проекта установленным стандартам? (например, разделение на components, hooks, contexts, utils и т. д.).
Используются ли соответствующие .gitignore и файлы конфигурации, такие как .editorconfig?
так выглядит файловая структура проетка:
{files}
Качество компонентов:

Каждый компонент следует принципам атомарного дизайна (если применимо)?
Компоненты разделены на Presentational и Container (умные и глупые компоненты)?
Правильно ли используется композиция компонентов вместо дублирования кода?
Состояние и управление данными:

Локальное состояние (useState, useReducer) используется только там, где это оправдано?
Для глобального состояния используются контексты или библиотеки, такие как Redux, Zustand или React Query?
Отсутствуют ли прямые мутации состояния?
Асинхронная логика:

Асинхронные вызовы корректно обрабатываются с использованием useEffect, React Query или аналогичных подходов?
Правильно ли настроена обработка ошибок?
Оптимизация и производительность:

Используются ли мемоизация (React.memo, useMemo, useCallback) для предотвращения лишних рендеров?
Компоненты не содержат тяжелой логики, которая могла бы быть вынесена в utils или другие слои?
Стилизация:

Используются ли современные подходы к стилизации (CSS Modules, Styled Components, Tailwind и т. д.)?
Стили разделены и не засоряют компоненты?
Тестирование:

Наличие юнит-тестов (Jest, React Testing Library) для каждого важного компонента и хука?
Тестируются ли основные пользовательские сценарии?
Соблюдение стандартов и безопасности:

Код соответствует стилевым рекомендациям (ESLint, Prettier)?
Учитываются ли вопросы безопасности, такие как защита от XSS?
Отсутствуют ли несанкционированные доступы к данным или использование dangerouslySetInnerHTML без явной необходимости?
Роутинг и навигация:

Используется ли библиотека роутинга, например, React Router?
Правильно ли настроены защищенные маршруты и маршруты с ленивой загрузкой (React.lazy, Suspense)?
Документация и читаемость:

Код понятный и читаемый, с достаточным уровнем комментариев?
Есть ли документация для сложных компонентов, кастомных хуков или глобальных контекстов?
Укажи обнаруженные проблемы, дай рекомендации по улучшению, а также оцени общее качество кода и его соответствие стандартам.
"""
