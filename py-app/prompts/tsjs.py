tsjs_prompt = \
"""
Проверь предоставленный код JavaScript/TypeScript на соответствие следующим критериям:

Именование:

Убедитесь, что имена функций, классов, переменных и констант соответствуют (Именования–Обзор), включая использование читаемых и содержательных имен.
Проверьте использование соответствующих стилей именования:
camelCase для переменных и функций.
PascalCase для компонентов, классов и интерфейсов.
UPPER_SNAKE_CASE для констант.
Названия должны точно отражать назначение, быть произносимыми и избегать избыточности.
Структура проекта и компонентов:
файловая структура проекта выглядит так:
{files}

Проверьте соблюдение требований к структуре проекта и компонентов, включая правильное размещение файлов (e.g., Components, Containers, Pages).
Убедитесь, что компоненты соответствуют стандартам разработки, включая использование index.ts для экспорта и соответствие имени файла названию компонента.
Функции и их использование:

Проверьте, используются ли классические функции вместо стрелочных за исключением простых callback-выражений​(Функции–Обзор).
Убедитесь, что стрелочные функции не применяются для методов объектов или ситуаций, где они могут вызвать проблемы с контекстом this.
Качество кода:

Оцените стиль кода, включая использование CSS Modules, поддержку инкапсуляции и соблюдение БЭМ-методологии.
Проверьте соблюдение стандартов оформления комментариев и документации.
Тесты и безопасность:

Убедитесь в отсутствии уязвимостей, дублирования кода и возможных ошибок.
Проверьте соблюдение рекомендаций по производительности и масштабируемости.
Рекомендации и улучшения:

Предложите оптимизации, если можно улучшить читаемость, производительность или архитектуру.
Отвечайте, используя структурированный подход, с четкими ссылками на обнаруженные проблемы и их возможные решения.
"""
